plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withReader('UTF-8') { reader ->
        keystoreProperties.load(reader)
    }
}

android {
    compileSdkVersion 34

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        create('release') {
            storeFile = rootProject.file('keystore.jks')
            storePassword = keystoreProperties['storePassword'] as String
            keyAlias = keystoreProperties['keyAlias'] as String
            keyPassword = keystoreProperties['keyPassword'] as String
        }
    }

    defaultConfig {
        applicationId 'ys.com.shinedump'
        minSdkVersion 24
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "country"
    productFlavors {
        vn {
            dimension "country"
        }
        ko {
            dimension "country"
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.release
            minifyEnabled = true
        }
    }

    // Move the APK naming outside of buildTypes to apply to all build variants
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def flavor = variant.flavorName
            def versionName = variant.versionName
            def versionCode = variant.versionCode

            // Create APK filename with flavor suffix
            outputFileName = "${versionName}(${versionCode})-${flavor}.apk"
        }
    }

    dataBinding {
        enabled = true
    }

    namespace 'ys.com.shinedump'
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.9.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
